/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    java

    val springBootVersion = "2.1.7.RELEASE"
    val versionsVersion = "0.22.0"

    id("org.springframework.boot") version springBootVersion
    id("com.github.ben-manes.versions") version versionsVersion
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = sourceCompatibility
}

tasks.withType<JavaCompile> {
    options.compilerArgs = listOf("-parameters")
}

apply(plugin = "io.spring.dependency-management")

val developmentOnly: Configuration by configurations.creating

configurations {
    runtimeClasspath {
        extendsFrom(developmentOnly)
    }
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    val guavaVersion = "28.0-jre"
    val jUnit5Version = "5.5.1"

    // This dependency is used by the application.
    implementation("com.google.guava:guava:$guavaVersion")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.hibernate:hibernate-validator-annotation-processor:6.0.17.Final")

    developmentOnly("org.springframework.boot:spring-boot-devtools")

    // Use JUnit Jupiter API for testing.
    testImplementation("org.junit.jupiter:junit-jupiter-api:$jUnit5Version")
    testImplementation("org.springframework.boot:spring-boot-starter-test")

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$jUnit5Version")
}

val test by tasks.getting(Test::class) {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
